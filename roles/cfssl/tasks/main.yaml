---
# 为确保安全，kubernetes 系统各组件需要使用 x509 证书对通信进行加密和认证。

# CA (Certificate Authority) 是自签名的根证书，用来签名后续创建的其它证书。

# CA 证书是集群所有节点共享的，只需要创建一次，后续用它签名其它所有证书。

# 本文档使用 CloudFlare 的 PKI 工具集 cfssl 创建所有证书。默认在第一台master机器上

- name: 创建二进制存放目录
  file:
    path: /opt/k8s/bin
    state: directory

- name: 配置环境变量
  lineinfile:
    path: /etc/profile
    regexp: '^export PATH=/opt/k8s'
    insertafter: '^unset -f'
    line: export PATH=/opt/k8s/bin:$PATH

- name: 环境变量生效
  shell: "source /etc/profile"
  register: sr
  failed_when: "sr.rc != 0"

- name: 创建证书目录
  file:
    path: "{{ item }}"
    state: directory
  with_list:
    - /opt/k8s/certs
    - /opt/k8s/work
  when: 'inventory_hostname == groups.master[0]'

- name: 分发二进制文件cfssl、cfssljson、cfssl-certinfo
  copy:
    src: "{{ k8s_deploy_path }}/bin/cfssl/"
    dest: /opt/k8s/bin/
    owner: root
    group: root
    mode: '0755'
  when: 'inventory_hostname == groups.master[0]'

- name: 生成证书配置文件
  template: 
    src: "{{ item.src }}"
    dest: "/opt/k8s/work/{{ item.dest }}"
  loop:
    - { src: 'ca-config.json.j2', dest: 'ca-config.json' }
    - { src: 'ca-csr.json.j2', dest: 'ca-csr.json' }
    - { src: 'admin-csr.json.j2', dest: 'admin-csr.json' }
    - { src: 'etcd-csr.json.j2', dest: 'etcd-csr.json' }
    - { src: 'flanneld-csr.json.j2', dest: 'flanneld-csr.json' }
    - { src: 'kubernetes-csr.json.j2', dest: 'kubernetes-csr.json' }
    - { src: 'aggregator-csr.json.j2', dest: 'aggregator-csr.json' }
  tags:
  - csr
  when: 'inventory_hostname == groups.master[0]'

- name: 生成 CA 证书和私钥
  shell: "/opt/k8s/bin/cfssl gencert -initca ca-csr.json | /opt/k8s/bin/cfssljson -bare ca"
  args:
    chdir: /opt/k8s/work/
    creates: ca.pem
#  ignore_errors: true
  when: 'inventory_hostname == groups.master[0]'

- name: 创建证书存放目录
  file:
    path: /etc/kubernetes/cert
    state: directory

- name: 分发证书文件
  copy:
    src: "/opt/k8s/work/{{ item }}"
    dest: "/etc/kubernetes/cert/{{ item }}"
  with_list:
    - ca.pem
    - ca-config.json
    - ca-key.pem


