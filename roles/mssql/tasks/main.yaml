---

- name: 创建yum备份文件夹
  file:
    path: /etc/yum.repos.d/bak
    state: directory

- name: 备份系统自带的yum源
  shell: "mv *.repo ./bak/"
  args:
    chdir: /etc/yum.repos.d/
    creates: nexus.repo
  ignore_errors: true

- name: 配置nexus centos-base 代理
  yum_repository:
    name: centos-base
    description: Nexus Centos Base Repository
    file: nexus
    baseurl: "{{ nexus_base_url }}$releasever/os/$basearch/"
    gpgcheck: yes
    gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7

- name: 配置nexus centos-updates 代理
  yum_repository:
    name: centos-updates
    description: Nexus Centos Updates Repository
    file: nexus
    baseurl: "{{ nexus_base_url }}$releasever/updates/$basearch/"
    gpgcheck: yes
    gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7

- name: 配置nexus centos-extras  代理
  yum_repository:
    name: centos-extras
    description: Nexus Centos Extras Repository
    file: nexus
    baseurl: "{{ nexus_base_url }}$releasever/extras/$basearch/"
    gpgcheck: yes
    gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7

- name: 配置nexus centos-epel 代理
  yum_repository:
    name: centos-epel
    description: Nexus Centos EPEL Repository
    file: nexus
    baseurl: "{{ nexus_epel_url }}7/$basearch/"
    gpgcheck: no

- name: 配置nexus yum hosted代理
  yum_repository:
    name: yum-hosted
    description: Nexus Yum Hosted Repository
    file: nexus
    baseurl: "{{ nexus_hosted_url }}$releasever/Packages/"
    gpgcheck: no

- name: 清空yum缓存
  command: yum clean metadata
  args:
    warn: no

- name: 安装依赖包
  yum:
    name:
      - curl
      - sysstat
      - wget
      - vim
      - bash-completion
      - unzip
      - lrzsz
      - net-tools
      - p7zip
      - p7zip-plugins
      - telnet
    state: present

- name: 关闭防火墙
  systemd:
    name: firewalld
    state: stopped
    enabled: no

- name: 清理防火墙规则
  iptables:
    flush: yes

- name: 关闭selinux
  lineinfile:
    dest: /etc/selinux/config
    regexp: "^SELINUX="
    line: "SELINUX=disabled"

- name: 优化内核参数
  template: 
    src: mssql-sysctl.conf.j2
    dest: /etc/sysctl.d/mssql-sysctl.conf

- name: 内核参数生效
  shell: "sysctl -p /etc/sysctl.d/mssql-sysctl.conf"

- name: 关闭无关服务
  systemd:
    name: postfix
    state: stopped
    enabled: nou

- name: 设置系统时区
  timezone:
    name: Asia/Shanghai

- name: 创建.pip文件夹
  file:
    path: /root/.pip
    state: directory

- name: 分发pip.conf文件
  template:
    src: pip.conf.j2
    dest: /root/.pip/pip.conf

- name: 分发easy_install配置
  template:
    src: pydistutils.cfg.j2
    dest: /root/.pydistutils.cfg

- name: 安装pip
  easy_install:
    name: pip
    state: latest

- name: 安装expect依赖
  pip:
    name: pexpect

- name: 重新启动mssql机器
  reboot:
    msg: "reboot after 1m"
  tags:
  - reboot

- name: 配置mssql主机host文件
  lineinfile:
    path: /etc/hosts
    line: {{ hostvars[inventory_hostname]['ansible_host'] }} {{ inventory_hostname }}

- name: 配置mssql主机host文件
  lineinfile:
    path: /etc/hosts
    line: {{ hostvars[inventory_hostname]['ansible_host'] }} {{ inventory_hostname_short }}

- name: 安装mssql-server
  yum:
    name:
      - mssql-server
      - mssql-tools
      - unixODBC-devel
    state: present

- name: 运行mssql-conf配置
  expect:
    command: "/opt/mssql/bin/mssql-conf setup"
    responses:
      'Enter your edition\(1-8\):': "{{ edition }}"
      (?i)license: "yes"
      (?i)password: "{{ sa_passwd | regex_replace('\"')}}"
    echo: yes

- name: 创建mssql文件夹
  file:
    path: /usr/lib/tuned/mssql
    state: directory

- name: 分发tuned.conf优化文件
  template:
    src: tuned.conf.j2
    dest: /usr/lib/tuned/mssql/tuned.conf
    mode: "0755"

- name: tuned优化配置生效
  command: "/usr/sbin/tuned-adm profile mssql"

- name: 启动agent
  command: "/opt/mssql/bin/mssql-conf set sqlagent.enabled true"

- name: 重新启动mssql-server
  systemd:
    name: mssql-server
    state: restarted

- name: 开启1433端口
  firewalld:
    zone: public
    port: 1433/tcp
    permanent: yes
    state: enabled
    immediate: yes

- name: 创建keycloak数据库
  command: '/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "{{ sa_passwd }}" -Q "create database keycloak"'















    





