---

- name: 分发k8s二进制文件
  copy:
    src: "{{ k8s_deploy_path }}/bin/{{ k8s_version }}/"
    dest: /opt/k8s/bin/
    owner: root
    group: root
    mode: '0755'
  tags:
  - bin

- name: 生成admin证书和私钥
  shell: "/opt/k8s/bin/cfssl gencert -ca=/opt/k8s/work/ca.pem -ca-key=/opt/k8s/work/ca-key.pem -config=/opt/k8s/work/ca-config.json -profile=kubernetes admin-csr.json | /opt/k8s/bin/cfssljson -bare admin"
  args:
    chdir: /opt/k8s/work/
    creates: admin.pem
    warn: no
  when: 'inventory_hostname == groups.master[0]'

- name: 创建 kubeconfig 文件 -- 设置集群参数
  shell: "/opt/k8s/bin/kubectl config set-cluster kubernetes --certificate-authority=/opt/k8s/work/ca.pem --embed-certs=true --server={{ kube_apiserver }} --kubeconfig=kubectl.kubeconfig"
  args:
    chdir: /opt/k8s/work/
  when: 'inventory_hostname == groups.master[0]'

- name: 创建 kubeconfig 文件 -- 设置客户端认证参数
  shell: "/opt/k8s/bin/kubectl config set-credentials admin --client-certificate=/opt/k8s/work/admin.pem --client-key=/opt/k8s/work/admin-key.pem --embed-certs=true --kubeconfig=kubectl.kubeconfig"
  args:
    chdir: /opt/k8s/work/
  when: 'inventory_hostname == groups.master[0]'

- name: 创建 kubeconfig 文件 -- 设置上下文参数
  shell: "/opt/k8s/bin/kubectl config set-context kubernetes --cluster=kubernetes --user=admin --kubeconfig=kubectl.kubeconfig"
  args:
    chdir: /opt/k8s/work/
  when: 'inventory_hostname == groups.master[0]'

- name: 创建存放 kubeconfig 默认目录
  file:
    path: /root/.kube
    state: directory

- name: 分发 kubeconfig 文件
  copy:
    src: "/opt/k8s/work/kubectl.kubeconfig"
    dest: /root/.kube/config

- name: 设置默认上下文
  shell: "/opt/k8s/bin/kubectl config use-context kubernetes --kubeconfig=config"
  args:
    chdir: /root/.kube/
