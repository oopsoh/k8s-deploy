---

- name: 生成admin证书和私钥
  shell: "/opt/k8s/bin/cfssl gencert -ca=/opt/k8s/work/ca.pem -ca-key=/opt/k8s/work/ca-key.pem -config=/opt/k8s/work/ca-config.json -profile=kubernetes admin-csr.json | /opt/k8s/bin/cfssljson -bare admin"
  args:
    chdir: /opt/k8s/work/
    creates: admin.pem
    warn: no
  when: 'inventory_hostname == groups.master[0]'

- name: 分发生成的证书和私钥
  copy:
    src: "/opt/k8s/work/{{ item }}"
    dest: "/etc/kubernetes/cert/{{ item }}"
  with_list:
    - admin.pem
    - admin-key.pem

- name: 创建存放 kubeconfig 默认目录
  file:
    path: /root/.kube
    state: directory

- name: 创建 kubeconfig 文件 -- 设置集群参数
  shell: "/opt/k8s/bin/kubectl config set-cluster kubernetes --certificate-authority=/etc/kubernetes/cert/ca.pem --embed-certs=true --server=https://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:6443 --kubeconfig=kubectl.kubeconfig"
  args:
    chdir: /etc/kubernetes

- name: 创建 kubeconfig 文件 -- 设置客户端认证参数
  shell: "/opt/k8s/bin/kubectl config set-credentials admin --client-certificate=/etc/kubernetes/cert/admin.pem --client-key=/etc/kubernetes/cert/admin-key.pem --embed-certs=true --kubeconfig=kubectl.kubeconfig"
  args:
    chdir: /etc/kubernetes

- name: 创建 kubeconfig 文件 -- 设置上下文参数
  shell: "/opt/k8s/bin/kubectl config set-context kubernetes --cluster=kubernetes --user=admin --kubeconfig=kubectl.kubeconfig"
  args:
    chdir: /etc/kubernetes

- name: 分发 kubeconfig 文件
  copy:
    src: /etc/kubernetes/kubectl.kubeconfig
    dest: /root/.kube/config

- name: 设置默认上下文
  shell: "/opt/k8s/bin/kubectl config use-context kubernetes --kubeconfig=config"
  args:
    chdir: /root/.kube/
